trigger:
  branches:
    include:
    - main
    - develop

variables:
- group: TF_PIPELINES
- name: poolName
  value: 'Azure Pipelines'
- name: vmImage
  value: 'ubuntu-latest'
# image related vars
- name: gallery_rg_name
  value: 'dani-resource-group'
- name: gallery_name
  value: 'winGallery'
- name: image_name
  value: 'test-image-1'
- name: image_publisher
  value: 'DanielaBG'
- name: image_offer
  value: 'WindowsServer'
- name: image_sku
  value: 'Example12345'


stages:
- stage: TerraformImg
  displayName: Deploy Terraform for image definition
  pool:
    name: $(poolName)
    vmImage: $(vmImage)

  jobs:
  - job: plan
    displayName: Terraform Plan
    variables:
      TF_VAR_gallery_rg_name: $(gallery_rg_name)
      TF_VAR_gallery_name: $(gallery_name)
      TF_VAR_image_name: $(image_name)
      TF_VAR_image_publisher: $(image_publisher)
      TF_VAR_image_offer: $(image_offer)
      TF_VAR_image_sku: $(image_sku)
    workspace:
      clean: all
    steps:
      - template: 'templates/terraform_plan_template.yml'
        parameters:
          tfWorkingDir: './image_def'
  - job: waitForValidation
    displayName: Wait for external validation
    dependsOn: plan
    pool: server
    timeoutInMinutes: 4320 # job times out in 3 days
    steps:
      - task: ManualValidation@0
        timeoutInMinutes: 1440 # task times out in 1 day
        inputs:
          notifyUsers: |
            danybecerr@gmail.com
          instructions: 'Please validate the build configuration and resume'
          onTimeout: 'reject'
  - job: apply
    displayName: Terraform Apply
    dependsOn: waitForValidation
    condition: in(dependencies.waitForValidation.result, 'Succeeded')
    variables:
      TF_VAR_gallery_rg_name: $(gallery_rg_name)
      TF_VAR_gallery_name: $(gallery_name)
      TF_VAR_image_name: $(image_name)
      TF_VAR_image_publisher: $(image_publisher)
      TF_VAR_image_offer: $(image_offer)
      TF_VAR_image_sku: $(image_sku)
    workspace:
      clean: all
    steps:
      - template: 'templates/terraform_apply_template.yml'
        parameters:
          tfWorkingDir: './image_def'
