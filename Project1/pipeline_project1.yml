trigger:
  branches:
    include:
    - main
    - develop
    - add_packer_stage

variables:
- group: TF_PIPELINES
- name: poolName
  value: 'Azure Pipelines'
- name: vmImage
  value: 'ubuntu-latest'

# image related vars
- name: gallery_rg_name
  value: 'dani-resource-group'
- name: gallery_name
  value: 'winGallery'
- name: image_name
  value: 'test-image-1'
- name: image_publisher
  value: 'DanielaBG'
- name: image_offer
  value: 'WindowsServer'
- name: image_sku
  value: 'Example1234'
- name: image_version
  value: "1.0.0"
# packer related vars
- name: packer_rg_name
  value: 'project1-packer-rg'
- name: projectDirectory
  value: 'Project1'
- name: packerJsonFileName
  value: 'windows-template-project1.json'
# Terraform working directories
- name: imgDefTerraformDirectory
  value: '$(Build.Repository.LocalPath)/$(projectDirectory)/image_def'
- name: packerRgTerraformDirectory
  value: '$(Build.Repository.LocalPath)/$(projectDirectory)/packer_rg'

stages:
- stage: TerraformPrereq
  displayName: Deploy Terraform requirements for packer
  pool:
    name: $(poolName)
    vmImage: $(vmImage)

  jobs:
  - job: terraformImgDef
    displayName: Terraform image definition
    workspace:
      clean: all
    steps:
      - checkout: self
      - task: CopyFiles@2
        displayName: 'copy script to terraform directory'
        inputs:
          SourceFolder: '$(Build.Repository.LocalPath)/scripts'
          Contents: |
            write_img_def_tfvars.sh
          TargetFolder: $(imgDefTerraformDirectory)
          OverWrite: true
      - script: |
          chmod +x write_img_def_tfvars.sh
          ./write_img_def_tfvars.sh
          ##[debug] cat terraform.tfvars
          cat terraform.tfvars
        workingDirectory: $(imgDefTerraformDirectory)
        displayName: 'Create tfvars file from global variables'
        env:
          gallery_rg_name: $(gallery_rg_name)
          gallery_name: $(gallery_name)
          image_name: $(image_name)
          image_publisher: $(image_publisher)
          image_offer: $(image_offer)
          image_sku: $(image_sku)

      - template: '../templates/terraform_plan_template.yml'
        parameters:
          tfWorkingDir: $(imgDefTerraformDirectory)
      - template: '../templates/terraform_apply_template.yml'
        parameters:
          tfWorkingDir: $(imgDefTerraformDirectory)

  - job: terraformRG
    dependsOn: terraformImgDef
    displayName: Terraform packer resource group
    workspace:
      clean: all
    steps:
      - checkout: self
      - script: |
          ##[debug] Creating terraform.tfvars for packer rg
          cat <<EOF > "terraform.tfvars"
          packer_rg_name   = "$packer_rg_name"
          EOF
          ##[debug] cat terraform.tfvars
          cat terraform.tfvars
        workingDirectory: $(packerRgTerraformDirectory)
        displayName: 'Create tfvars file from global variables'
        env:
          packer_rg_name: $(packer_rg_name)
      - template: '../templates/terraform_plan_template.yml'
        parameters:
          tfWorkingDir: $(packerRgTerraformDirectory)
      - template: '../templates/terraform_apply_template.yml'
        parameters:
          tfWorkingDir: $(packerRgTerraformDirectory)

- stage: packerBuild
  dependsOn: TerraformPrereq
  displayName: Build Packer Image
  pool:
    name: $(poolName)
    vmImage: $(vmImage)

  jobs:
  - job: packer
    timeoutInMinutes: 130
    displayName: packer build image
    workspace:
      clean: all
    steps:
      - checkout: self

      - template: ../templates/packer_pipeline_template.yml
        parameters:
          imageName: $(image_name)
          galleryName: $(gallery_name)
          galleryResourceGroup: $(gallery_rg_name)
          packerResourceGroup: $(packer_rg_name)
          imageVersion: $(image_version)
          templateDirectory: $(projectDirectory)
          packerJsonFileName: $(packerJsonFileName)
